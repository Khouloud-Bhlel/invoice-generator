{"version":3,"file":"pdf-generator.js","sourceRoot":"","sources":["../../src/lib/pdf-generator.ts"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\r\n\r\nimport { PDFDocument, StandardFonts, rgb } from \"pdf-lib\";\r\nimport { InvoiceFormData } from \"./types\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport async function generatePDF(data: InvoiceFormData) {\r\n  try {\r\n    const pdfDoc = await PDFDocument.create();\r\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n    const helveticaBold = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\r\n\r\n    // Create A4 page\r\n    const page = pdfDoc.addPage([595.28, 841.89]); // A4 size\r\n    const { width, height } = page.getSize();\r\n\r\n    // Define colors\r\n    const black = rgb(0, 0, 0);\r\n    const white = rgb(1, 1, 1);\r\n    const lightGray = rgb(0.95, 0.95, 0.95);\r\n    const mediumGray = rgb(0.8, 0.8, 0.8);\r\n    const darkGray = rgb(0.4, 0.4, 0.4);\r\n\r\n    // Margins\r\n    const margin = 50;\r\n    const contentWidth = width - (margin * 2);\r\n\r\n    // Helper functions\r\n    const drawText = (\r\n      text: string,\r\n      x: number,\r\n      y: number,\r\n      options: {\r\n        size?: number;\r\n        font?: \"normal\" | \"bold\";\r\n        color?: any;\r\n        align?: \"left\" | \"center\" | \"right\";\r\n        maxWidth?: number;\r\n      } = {}\r\n    ) => {\r\n      const {\r\n        size = 10,\r\n        font = \"normal\",\r\n        color = black,\r\n        align = \"left\",\r\n        maxWidth = 0\r\n      } = options;\r\n\r\n      const fontToUse = font === \"bold\" ? helveticaBold : helveticaFont;\r\n      \r\n      let xPos = x;\r\n      const textWidth = fontToUse.widthOfTextAtSize(text, size);\r\n      \r\n      if (align === \"center\") {\r\n        xPos = x - textWidth / 2;\r\n      } else if (align === \"right\") {\r\n        xPos = x - textWidth;\r\n      }\r\n\r\n      if (maxWidth > 0 && textWidth > maxWidth) {\r\n        const words = text.split(\" \");\r\n        let line = \"\";\r\n        let lineY = y;\r\n\r\n        for (const word of words) {\r\n          const testLine = line + (line ? \" \" : \"\") + word;\r\n          const testWidth = fontToUse.widthOfTextAtSize(testLine, size);\r\n\r\n          if (testWidth > maxWidth && line !== \"\") {\r\n            page.drawText(line, {\r\n              x: align === \"right\" ? xPos - fontToUse.widthOfTextAtSize(line, size) + maxWidth : xPos,\r\n              y: height - lineY,\r\n              size,\r\n              font: fontToUse,\r\n              color,\r\n            });\r\n            line = word;\r\n            lineY += size * 1.4;\r\n          } else {\r\n            line = testLine;\r\n          }\r\n        }\r\n\r\n        if (line) {\r\n          page.drawText(line, {\r\n            x: align === \"right\" ? xPos - fontToUse.widthOfTextAtSize(line, size) + maxWidth : xPos,\r\n            y: height - lineY,\r\n            size,\r\n            font: fontToUse,\r\n            color,\r\n          });\r\n        }\r\n        return lineY + size * 1.4; // Return the final Y position\r\n      } else {\r\n        page.drawText(text, {\r\n          x: xPos,\r\n          y: height - y,\r\n          size,\r\n          font: fontToUse,\r\n          color,\r\n        });\r\n        return y + size * 1.4;\r\n      }\r\n    };\r\n\r\n    const drawRect = (x: number, y: number, w: number, h: number, color: any) => {\r\n      page.drawRectangle({\r\n        x,\r\n        y: height - y - h,\r\n        width: w,\r\n        height: h,\r\n        color,\r\n      });\r\n    };\r\n\r\n    let currentY = 60;\r\n\r\n    // 1. HEADER SECTION - Logo and Invoice Number\r\n    drawText(\"YOUR\", margin, currentY, {\r\n      size: 14,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n    drawText(\"LOGO\", margin, currentY + 18, {\r\n      size: 14,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    // Format invoice number to match image (NO. 000001)\r\n    const formattedNumber = data.invoiceNumber.split('-').pop()?.padStart(6, '0') || '000001';\r\n    drawText(`NO. ${formattedNumber}`, width - margin, currentY + 9, {\r\n      size: 14,\r\n      font: \"normal\",\r\n      color: black,\r\n      align: \"right\",\r\n    });\r\n\r\n    // 2. LARGE INVOICE TITLE\r\n    currentY = 160;\r\n    drawText(\"INVOICE\", margin, currentY, {\r\n      size: 64,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    // 3. DATE\r\n    currentY = 240;\r\n    drawText(`Date: ${format(data.date, \"dd MMMM, yyyy\")}`, margin, currentY, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    // 4. BILLING INFORMATION\r\n    currentY = 290;\r\n    const leftColWidth = 200;\r\n    const rightColX = width - margin - leftColWidth;\r\n\r\n    // Billed to (left side)\r\n    drawText(\"Billed to:\", margin, currentY, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    let billedToY = currentY + 25;\r\n    \r\n    // Client Name (bold)\r\n    drawText(data.clientName || \"Studio Shodwe\", margin, billedToY, {\r\n      size: 11,\r\n      font: \"bold\",\r\n      color: black,\r\n      maxWidth: leftColWidth,\r\n    });\r\n    billedToY += 20;\r\n\r\n    // Client Address (if provided)\r\n    if (data.clientAddress && data.clientAddress.trim()) {\r\n      const addressLines = data.clientAddress.split('\\n');\r\n      for (const line of addressLines) {\r\n        if (line.trim()) {\r\n          drawText(line.trim(), margin, billedToY, {\r\n            size: 10,\r\n            font: \"normal\",\r\n            color: black,\r\n            maxWidth: leftColWidth,\r\n          });\r\n          billedToY += 15;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Client Email (if provided)\r\n    if (data.clientEmail && data.clientEmail.trim()) {\r\n      drawText(data.clientEmail, margin, billedToY, {\r\n        size: 10,\r\n        font: \"normal\",\r\n        color: black,\r\n        maxWidth: leftColWidth,\r\n      });\r\n      billedToY += 15;\r\n    }\r\n\r\n    // From (right side)\r\n    drawText(\"From:\", rightColX, currentY, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    let fromY = currentY + 25;\r\n    \r\n    // From Name (bold)\r\n    drawText(data.fromName || \"Olivia Wilson\", rightColX, fromY, {\r\n      size: 11,\r\n      font: \"bold\",\r\n      color: black,\r\n      maxWidth: leftColWidth,\r\n    });\r\n    fromY += 20;\r\n\r\n    // From Address (if provided)\r\n    if (data.fromAddress && data.fromAddress.trim()) {\r\n      const addressLines = data.fromAddress.split('\\n');\r\n      for (const line of addressLines) {\r\n        if (line.trim()) {\r\n          drawText(line.trim(), rightColX, fromY, {\r\n            size: 10,\r\n            font: \"normal\",\r\n            color: black,\r\n            maxWidth: leftColWidth,\r\n          });\r\n          fromY += 15;\r\n        }\r\n      }\r\n    }\r\n\r\n    // From Email (if provided)\r\n    if (data.fromEmail && data.fromEmail.trim()) {\r\n      drawText(data.fromEmail, rightColX, fromY, {\r\n        size: 10,\r\n        font: \"normal\",\r\n        color: black,\r\n        maxWidth: leftColWidth,\r\n      });\r\n      fromY += 15;\r\n    }\r\n\r\n    // 5. ITEMS TABLE\r\n    currentY = Math.max(billedToY, fromY) + 60;\r\n\r\n    // Table header with light gray background\r\n    const tableHeaderHeight = 40;\r\n    drawRect(margin, currentY, contentWidth, tableHeaderHeight, lightGray);\r\n\r\n    // Column positions (matching the image layout)\r\n    const itemCol = margin + 15;\r\n    const qtyCol = margin + 320;\r\n    const priceCol = margin + 400;\r\n    const amountCol = margin + contentWidth - 15;\r\n\r\n    // Table headers\r\n    drawText(\"Item\", itemCol, currentY + 25, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    drawText(\"Quantity\", qtyCol, currentY + 25, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n      align: \"center\",\r\n    });\r\n\r\n    drawText(\"Price\", priceCol, currentY + 25, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n      align: \"center\",\r\n    });\r\n\r\n    drawText(\"Amount\", amountCol, currentY + 25, {\r\n      size: 12,\r\n      font: \"bold\",\r\n      color: black,\r\n      align: \"right\",\r\n    });\r\n\r\n    currentY += tableHeaderHeight;\r\n\r\n    // Table rows\r\n    const rowHeight = 35;\r\n    data.items.forEach((item, index) => {\r\n      // Alternate row background for better readability\r\n      if (index % 2 === 0) {\r\n        drawRect(margin, currentY, contentWidth, rowHeight, rgb(0.99, 0.99, 0.99));\r\n      }\r\n\r\n      drawText(item.description || \"Item description\", itemCol, currentY + 22, {\r\n        size: 11,\r\n        font: \"normal\",\r\n        color: black,\r\n        maxWidth: 280,\r\n      });\r\n\r\n      drawText(item.quantity.toString(), qtyCol, currentY + 22, {\r\n        size: 11,\r\n        font: \"normal\",\r\n        color: black,\r\n        align: \"center\",\r\n      });\r\n\r\n      drawText(`${item.price.toFixed(0)}`, priceCol, currentY + 22, {\r\n        size: 11,\r\n        font: \"normal\",\r\n        color: black,\r\n        align: \"center\",\r\n      });\r\n\r\n      drawText(`${(item.quantity * item.price).toFixed(0)}`, amountCol, currentY + 22, {\r\n        size: 11,\r\n        font: \"normal\",\r\n        color: black,\r\n        align: \"right\",\r\n      });\r\n\r\n      currentY += rowHeight;\r\n    });\r\n\r\n    // Table border\r\n    page.drawLine({\r\n      start: { x: margin, y: height - (currentY - (data.items.length * rowHeight) - tableHeaderHeight) },\r\n      end: { x: margin + contentWidth, y: height - (currentY - (data.items.length * rowHeight) - tableHeaderHeight) },\r\n      thickness: 1,\r\n      color: mediumGray,\r\n    });\r\n\r\n    page.drawLine({\r\n      start: { x: margin, y: height - currentY },\r\n      end: { x: margin + contentWidth, y: height - currentY },\r\n      thickness: 1,\r\n      color: mediumGray,\r\n    });\r\n\r\n    // 6. TOTAL SECTION (matching the image layout)\r\n    currentY += 40;\r\n    const totalBoxWidth = 150;\r\n    const totalBoxX = margin + contentWidth - totalBoxWidth;\r\n\r\n    drawText(\"Total\", totalBoxX, currentY, {\r\n      size: 14,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    const total = data.items.reduce((sum, item) => sum + (item.quantity * item.price), 0);\r\n    drawText(`${total.toFixed(0)}`, amountCol, currentY, {\r\n      size: 14,\r\n      font: \"bold\",\r\n      color: black,\r\n      align: \"right\",\r\n    });\r\n\r\n    // 7. PAYMENT INFO\r\n    currentY += 80;\r\n\r\n    drawText(\"Payment method: Cash\", margin, currentY, {\r\n      size: 11,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    drawText(\"Note: Thank you for choosing us!\", margin, currentY + 25, {\r\n      size: 11,\r\n      font: \"bold\",\r\n      color: black,\r\n    });\r\n\r\n    // 8. DECORATIVE FOOTER WAVES (matching the image style)\r\n    const waveStartY = height - 180;\r\n    \r\n    // Create smooth wave curves\r\n    const wavePoints1: Array<{x: number, y: number}> = [];\r\n    const wavePoints2: Array<{x: number, y: number}> = [];\r\n    \r\n    for (let x = 0; x <= width; x += 5) {\r\n      const progress = x / width;\r\n      \r\n      // First wave (lighter gray)\r\n      const wave1Y = waveStartY + Math.sin(progress * Math.PI * 3) * 30 + 20;\r\n      wavePoints1.push({ x, y: wave1Y });\r\n      \r\n      // Second wave (darker gray)\r\n      const wave2Y = waveStartY + Math.sin(progress * Math.PI * 2 + 0.5) * 40 + 60;\r\n      wavePoints2.push({ x, y: wave2Y });\r\n    }\r\n\r\n    // Draw the waves using multiple line segments for smooth curves\r\n    // Light gray wave\r\n    for (let i = 0; i < wavePoints1.length - 1; i++) {\r\n      const start = wavePoints1[i];\r\n      const end = wavePoints1[i + 1];\r\n      \r\n      page.drawLine({\r\n        start: { x: start.x, y: start.y },\r\n        end: { x: end.x, y: end.y },\r\n        thickness: 3,\r\n        color: rgb(0.85, 0.85, 0.85),\r\n      });\r\n    }\r\n\r\n    // Fill area below light wave\r\n    for (let x = 0; x < width; x += 10) {\r\n      const progress = x / width;\r\n      const waveY = waveStartY + Math.sin(progress * Math.PI * 3) * 30 + 20;\r\n      drawRect(x, waveY, 10, height - waveY, rgb(0.85, 0.85, 0.85));\r\n    }\r\n\r\n    // Dark gray wave\r\n    for (let i = 0; i < wavePoints2.length - 1; i++) {\r\n      const start = wavePoints2[i];\r\n      const end = wavePoints2[i + 1];\r\n      \r\n      page.drawLine({\r\n        start: { x: start.x, y: start.y },\r\n        end: { x: end.x, y: end.y },\r\n        thickness: 4,\r\n        color: darkGray,\r\n      });\r\n    }\r\n\r\n    // Fill area below dark wave\r\n    for (let x = 0; x < width; x += 10) {\r\n      const progress = x / width;\r\n      const waveY = waveStartY + Math.sin(progress * Math.PI * 2 + 0.5) * 40 + 60;\r\n      drawRect(x, waveY, 10, height - waveY, darkGray);\r\n    }\r\n\r\n    // Generate and download PDF\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = `invoice-${data.invoiceNumber}.pdf`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"PDF Generation Error:\", error);\r\n    throw new Error(\"Failed to generate PDF. Please try again.\");\r\n  }\r\n}\r\n"]}